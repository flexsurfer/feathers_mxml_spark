<?xml version="1.0"?>
<spark:PanelScreen xmlns:fx="http://ns.adobe.com/mxml/2009"
                   xmlns:spark="feathers.spark.*" title="List">

    <spark:customHeader>
        <spark:Header>
            <spark:leftContent>
                <spark:Button label="Back" style="{feathers.controls.Button.ALTERNATE_STYLE_NAME_BACK_BUTTON}"
                              click="close()"/>
            </spark:leftContent>
            <spark:rightContent>
                <spark:Button label="Settings" click="showNextScreen(SHOW_SETTINGS)"/>
            </spark:rightContent>
        </spark:Header>
    </spark:customHeader>

    <spark:List id="list" left="0" right="0" clipContent="false" autoHideBackground="true"
                labelField="text"
                isSelectable="{settings.isSelectable}"
    allowMultipleSelection = "{settings.allowMultipleSelection}"
           hasElasticEdges = "{settings.hasElasticEdges}"/>

    <fx:Script><![CDATA[
        import feathers.controls.Button;
        import feathers.data.ListCollection;

        import screens.data.ListSettings;

        public static const SHOW_SETTINGS:String = "showSettings";

        override protected function initialize():void
        {
            super.initialize();

            var items:Array = [];
            for(var i:int = 0; i < 150; i++)
            {
                var item:Object = {text: "Item " + (i + 1).toString()};
                items[i] = item;
            }
            items.fixed = true;

            this.list.dataProvider = new ListCollection(items);
            this.list.typicalItem = {text: "Item 1000"};
        }

        [Bindable(event="change")]
        public function get settings():ListSettings
        {
            return super.data as ListSettings;
        }

        public function set settings(value:ListSettings):void
        {
            super.data = value;
            this.dispatchEventWith(Event.CHANGE);
        }

        ]]>
    </fx:Script>

</spark:PanelScreen>